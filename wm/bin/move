#!/bin/sh
#
# move windows with bspwm
#
# wm key bindings

dir=$1

node=$(bspc query -N -n)

case $dir in
    west)  fdim=width;  tdim=height; sign=-;;
    east)  fdim=width;  tdim=height; sign=+;;
    north) fdim=height; tdim=width;  sign=-;;
    south) fdim=height; tdim=width;  sign=+
esac

# move floating windows
floating ()
{
    percent=5

    # get a percentage of the monitor horizontal resolution
    var=$((`bspc query -T -m | jq .rectangle.width` * percent / 100))

    [ "$fdim" = width  ] && { x=$sign$var; y=0; }
    [ "$fdim" = height ] && { y=$sign$var; x=0; }

    bspc node -v "$x" "$y"
}

# move tiled windows
tiled ()
{
    # attempt to replace a preselection or to move a window
    { bspc node -n "$dir.!automatic" || bspc node -s "$dir"; } && return

    # exit if there is no parent window
    par_id=$(bspc query -N -n "$node#@parent"); test "$par_id" || return

    cur_dim=$(bspc query -T -n "$node"         | jq ".rectangle.$tdim")
    par_dim=$(bspc query -T -n "$node#@parent" | jq ".rectangle.$tdim")

    if [ "$par_dim" -gt "$cur_dim" ]; then
        # create a receptacle
        # get the receptacle id
        # replace the receptacle

        bspc node "$par_id" -p "$dir"
        bspc node "$par_id" -i

        rec_id=$(bspc query -N "$par_id#@parent" -n .descendant_of.leaf.!window)

        bspc node "$node" -n "$rec_id"
        bspc node "$node#@parent" -B
    else
        node=$par_id

        tiled
    fi
}

# teleport pointer on the focused window
bspc config pointer_follows_focus true
bspc query -N -n focused.floating > /dev/null && floating || tiled
bspc config pointer_follows_focus false
