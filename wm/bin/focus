#!/bin/sh
#
# focus windows

# exit when fullscreen
bspc query -N -n focused.fullscreen > /dev/null && exit

case $1 in
    east)  dir=x; op=-gt;;
    west)  dir=x; op=-lt;;
    north) dir=y; op=-lt;;
    south) dir=y; op=-gt
esac

# get values for the current window
wattr xy $(windows focused) |
{
    read -r cur_x cur_y

    # get values for all other windows
    wattr xyi $(windows normal) |
        while read -r win_x win_y win; do
            diff_x=$((win_x < cur_x ? - win_x + cur_x : win_x - cur_x))
            diff_y=$((win_y < cur_y ? - win_y + cur_y : win_y - cur_y))

            [ "$dir" = x ] && [ "$win_x" "$op" "$cur_x" ] && echo "$diff_x $diff_y $win"
            [ "$dir" = y ] && [ "$win_y" "$op" "$cur_y" ] && echo "$diff_y $diff_x $win"
        done |
        {
            # sort windows
            while read -r col_1 col_2 col_3; do
                case $((min_1 ? col_1 < min_1 ? 0 : col_1 == min_1 && col_2 < min_2 ? 1 : 2 : 3)) in
                    0|1|3) min_1=$col_1; min_2=$col_2; focus=$col_3
                esac
            done

            # exit if there is no window to focus
            test "$focus" || exit

            # teleport pointer on the focused window
            bspc config pointer_follows_focus true
            bspc node "$focus" -f
            bspc config pointer_follows_focus false
        }
}
