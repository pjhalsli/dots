#!/bin/sh
#
# move window

get() {
    arg=$1
    tmp=$IFS

    # filthy json parsing
    IFS=,; set -- $2
    IFS={; set -- $@
    IFS=}; set -- $@

    for i; do
        case $i in
            *\"$arg\"*)
                IFS=:; set -- $i

                echo "$2"

                # reset IFS
                IFS=$tmp; return
        esac
    done
}

dir=$1

case $dir in
    west)  fdim=width;  tdim=height; sign=-;;
    east)  fdim=width;  tdim=height; sign=+;;
    north) fdim=height; tdim=width;  sign=-;;
    south) fdim=height; tdim=width;  sign=+
esac

case $(get state "$(bspc query -T -n)") in
    \"tiled\")
        # try to replace a preselection or to move the window normally
        { bspc node -n "$dir.!automatic" || bspc node -s "$dir"; } || {
            node=$(bspc query -N -n)

            while parent=$(bspc query -N -n "$node#@parent"); do
                # compare height or width to parent
                [                                                          \
                    "$(get "$tdim" "$(bspc query -T -n "$node")")" -le     \
                    "$(get "$tdim" "$(bspc query -T -n "$node#@parent")")" \
                ] && {
                    # climb up the tree using a receptacle
                    bspc node "$node#@parent" -p "$dir" -i

                    bspc node "$node" -n \
                        "$(bspc query -N "$node#@parent#@parent" -n .descendant_of.leaf.!window)"

                    bspc node "$node#@parent" -B

                    break
                }

                node=$parent
            done
        }

        cursor
        ;;
    \"floating\")
        percent=5

        # get a percentage of the monitor resolution
        var=$((`get "$fdim" "$(bspc query -T -m)"` * percent / 100))

        [ "$fdim" = width  ] && { x=$sign$var; y=0; }
        [ "$fdim" = height ] && { y=$sign$var; x=0; }

        bspc node -v "$x" "$y"

        cursor
esac
